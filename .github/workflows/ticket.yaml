on:
  push: 
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'
jobs:
  ticket:
    permissions:
      contents: write
      issues: write
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo content
        uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install German locale
        run: |
          sudo apt-get update
          sudo apt-get install -y locales
          sudo locale-gen de_DE.UTF-8
          sudo update-locale LANG=de_DE.UTF-8

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: execute py script
        run: |
          python ticket.py 
          python chart.py

      - name: push
        if: always()
        env:
          CI_COMMIT_MESSAGE: Continuous Integration Build Artifacts
          CI_COMMIT_AUTHOR: Continuous Integration
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
          tree
          git add * || echo ""
          git status || echo ""
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}" || echo ""
          git push || echo ""

      - name: issue
        run: |
          
          # Read the last two rows of the CSV
          last_two_rows=$(tail -n 2 ticket_prices.csv)
          
          # Extract values
          prev_col2=$(echo "$last_two_rows" | head -n 1 | awk -F',' '{print $2}')
          prev_col3=$(echo "$last_two_rows" | head -n 1 | awk -F',' '{print $3}')
          
          last_col2=$(echo "$last_two_rows" | tail -n 1 | awk -F',' '{print $2}')
          last_col3=$(echo "$last_two_rows" | tail -n 1 | awk -F',' '{print $3}')
          
          # Convert numbers and compare
          if awk -v a="$last_col2" -v b="$prev_col2" -v c="$last_col3" -v d="$prev_col3" \
             'BEGIN {if (a < b || c < d) exit 0; else exit 1}'; then
              echo "drop"
              gh issue create \
              --title "Preisminderung" \
              --assignee "$ASSIGNEES" \
              --body "# Preisminderung\n'''\n$last_two_rows\n'''"
          elif awk -v a="$last_col2" -v b="$prev_col2" -v c="$last_col3" -v d="$prev_col3" \
             'BEGIN {if (a > b || c > d) exit 0; else exit 1}'; then
              echo "increase"
              gh issue create \
              --title "Preissteigerung" \
              --assignee "$ASSIGNEES" \
              --body "# Preissteigerung\n'''\n$last_two_rows\n'''"
          else
              echo "no change"
          fi

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          TITLE: Kornalarm
          ASSIGNEES: maxgruber19,Chrish-97
